{"version":3,"sources":["components/leaderboard.component.js","App.js","serviceWorker.js","index.js","assets sync /^/.*$","assets/logo.png","assets/userPic0.png","assets/userPic1.png","assets/userPic2.png","assets/userPic3.png","assets/userPic4.png","assets/userPic5.png","assets/userPic6.png"],"names":["Leaderboard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeCode","bind","assertThisInitialized","onSubmit","state","room","page","users","step","score","question","answers","endpoint","window","location","protocol","replace","hostname","port","colyseus","Colyseus","message","key","console","log","data","setState","q","a","onMessage","add","msgListener","e","target","value","preventDefault","join","onJoin","joinListener","react_default","createElement","align","style","color","marginTop","marginBottom","map","user","i","className","background","borderRadius","maxWidth","src","require","avatar","fname","answer","tscore","type","width","padding","border","onChange","Component","App","BrowserRouter","height","Switch","Route","path","component","Boolean","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","./logo.png","./userPic0.png","./userPic1.png","./userPic2.png","./userPic3.png","./userPic4.png","./userPic5.png","./userPic6.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","Error","code","keys","resolve","module","exports","p"],"mappings":"wOAKqBA,qBACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAKU,SAAWV,EAAKU,SAASF,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAEhBA,EAAKW,MAAQ,CACXC,KAAM,GACNC,KAAM,OACNC,MAAO,GACPC,KAAM,EACNC,MAAO,GACPC,SAAU,GACVC,QAAS,IAGX,IAAIC,EAAWC,OAAOC,SAASC,SAASC,QAAQ,OAAQ,MAAQ,KAAOH,OAAOC,SAASG,SAhBtE,OAmBbJ,OAAOC,SAASI,MAAiC,OAAzBL,OAAOC,SAASI,OAAiBN,GAAY,SAGzEnB,EAAK0B,SAAW,IAAIC,SAAgBR,GAtBnBnB,2EAyBP4B,GACS,QAAfA,EAAQC,KACVC,QAAQC,IAAI,gBAAiBH,EAAQI,MACrC7B,KAAK8B,SAAS,CAACnB,MAAMc,EAAQI,QACL,QAAfJ,EAAQC,KACjBC,QAAQC,IAAI,mBACZ5B,KAAK8B,SAAS,CAACpB,KAAK,OAAQE,KAAKa,EAAQI,KAAKjB,KAAME,SAAUW,EAAQI,KAAKE,EAAGhB,QAASU,EAAQI,KAAKG,KAC5E,UAAfP,EAAQC,MACjBC,QAAQC,IAAI,UAAWH,EAAQI,MAC/B7B,KAAK8B,SAAS,CAACpB,KAAK,SAAUC,MAAMc,EAAQI,+CAK9CF,QAAQC,IAAI,UACZ5B,KAAKS,KAAKwB,UAAUC,IAAIlC,KAAKmC,YAAY9B,KAAKL,OAC9CA,KAAK8B,SAAS,CACZpB,KAAM,8CAIG0B,GACXpC,KAAK8B,SAAS,CACZrB,KAAM2B,EAAEC,OAAOC,yCAIVF,GACPA,EAAEG,iBACFZ,QAAQC,IAAI,eAAgB5B,KAAKQ,MAAMC,MACvCT,KAAKS,KAAOT,KAAKuB,SAASiB,KAAKxC,KAAKQ,MAAMC,MAC1CT,KAAKS,KAAKgC,OAAOP,IAAIlC,KAAK0C,aAAarC,KAAKL,wCAI5C,MAAuB,QAAnBA,KAAKQ,MAAME,KACbiC,EAAAX,EAAAY,cAAA,WACED,EAAAX,EAAAY,cAAA,MAAIC,MAAM,SAASC,MAAO,CAACC,MAAM,OAAQC,UAAW,GAAIC,aAAc,KAAtE,QAAiFjD,KAAKQ,MAAMC,KAA5F,oBACCT,KAAKQ,MAAMG,MAAMuC,IAAI,SAACC,EAAMC,GAC3B,OACAT,EAAAX,EAAAY,cAAA,OAAKS,UAAU,gBAAgB3B,IAAK0B,EAAGN,MAAO,CAACQ,WAAW,2BAA4BC,aAAa,GAAIC,SAAS,MAC9Gb,EAAAX,EAAAY,cAAA,OAAKS,UAAU,UAAUI,IAAKC,MAAQ,KAAaP,EAAKQ,UAAUhB,EAAAX,EAAAY,cAAA,QAAMS,UAAU,YAAYF,EAAKS,WAMpF,QAAnB5D,KAAKQ,MAAME,KACbiC,EAAAX,EAAAY,cAAA,WACED,EAAAX,EAAAY,cAAA,MAAIC,MAAM,SAASC,MAAO,CAACC,MAAM,OAAQC,UAAW,GAAIC,aAAc,KAAMjD,KAAKQ,MAAMI,KAAvF,gBACA+B,EAAAX,EAAAY,cAAA,MAAIC,MAAM,SAASC,MAAO,CAACC,MAAM,OAAQC,UAAW,GAAIC,aAAc,KAAMjD,KAAKQ,MAAMM,UACtFd,KAAKQ,MAAMO,QAAQmC,IAAI,SAACW,EAAQT,GAC/B,OACAT,EAAAX,EAAAY,cAAA,OAAKS,UAAU,kBAAkB3B,IAAK0B,EAAGN,MAAO,CAACQ,WAAW,4BAA6BE,SAAS,MAChGb,EAAAX,EAAAY,cAAA,QAAMS,UAAU,cAAcQ,OAMf,UAAnB7D,KAAKQ,MAAME,KACbiC,EAAAX,EAAAY,cAAA,WACED,EAAAX,EAAAY,cAAA,MAAIC,MAAM,SAASC,MAAO,CAACC,MAAM,OAAQC,UAAW,GAAIC,aAAc,KAAtE,eACCjD,KAAKQ,MAAMG,MAAMuC,IAAI,SAACC,EAAMC,GAC3B,OACAT,EAAAX,EAAAY,cAAA,OAAKS,UAAU,gBAAgB3B,IAAK0B,EAAGN,MAAO,CAACQ,WAAW,2BAA4BC,aAAa,GAAIC,SAAS,MAC9Gb,EAAAX,EAAAY,cAAA,OAAKS,UAAU,UAAUI,IAAKC,MAAQ,KAAaP,EAAKQ,UAAUhB,EAAAX,EAAAY,cAAA,QAAMS,UAAU,YAAYF,EAAKS,MAAjC,mBAA+DjB,EAAAX,EAAAY,cAAA,cAASO,EAAKW,aAOnJnB,EAAAX,EAAAY,cAAA,QAAMrC,SAAUP,KAAKO,SAAU8C,UAAU,cAAcP,MAAO,CAAEE,UAAW,KACzEL,EAAAX,EAAAY,cAAA,MAAIC,MAAM,SAASC,MAAO,CAACC,MAAM,OAAQC,UAAW,GAAIC,aAAc,KAAtE,0BACAN,EAAAX,EAAAY,cAAA,OAAKS,UAAU,cACbV,EAAAX,EAAAY,cAAA,SAAOmB,KAAK,OAAOjB,MAAO,CAACkB,MAAM,IAAKC,QAAQ,GAAIV,aAAa,EAAGD,WAAW,2BAA4BY,OAAO,GAAI5B,MAAOtC,KAAKQ,MAAMC,KAAM0D,SAAUnE,KAAKI,gBAE7JuC,EAAAX,EAAAY,cAAA,OAAKS,UAAU,cACbV,EAAAX,EAAAY,cAAA,SAAOmB,KAAK,SAASjB,MAAO,CAACkB,MAAM,IAAKC,QAAQ,GAAIV,aAAa,GAAIW,OAAO,iBAAkBZ,WAAW,mBAAoBP,MAAM,QAAST,MAAM,mBAzGrH8B,cCkB1BC,mLAfX,OACE1B,EAAAX,EAAAY,cAAC0B,EAAA,EAAD,KACE3B,EAAAX,EAAAY,cAAA,OAAKS,UAAU,aACbV,EAAAX,EAAAY,cAAA,OAAKS,UAAU,eACbV,EAAAX,EAAAY,cAAA,OAAKC,MAAM,SAASQ,UAAU,SAASI,IAAKC,EAAQ,IAAsBZ,MAAO,CAACyB,OAAO,IAAKvB,UAAW,OAE3GL,EAAAX,EAAAY,cAAC4B,EAAA,EAAD,KACI7B,EAAAX,EAAAY,cAAC6B,EAAA,EAAD,CAAOC,KAAK,eAAeC,UAAYhF,cATnCyE,aCMEQ,QACW,cAA7B3D,OAAOC,SAASG,UAEe,UAA7BJ,OAAOC,SAASG,UAEhBJ,OAAOC,SAASG,SAASwD,MACvB,2DCXNC,IAASC,OACPpC,EAAAX,EAAAY,cAAC0B,EAAA,EAAD,KACA3B,EAAAX,EAAAY,cAACoC,EAAD,OACkBC,SAASC,eAAe,SDuHtC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInB,IAAAtC,EAAA,CACAuC,aAAA,GACAC,iBAAA,GACAC,iBAAA,GACAC,iBAAA,GACAC,iBAAA,GACAC,iBAAA,GACAC,iBAAA,GACAC,iBAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAC,EAAAjD,EAAAgD,GACA,KAAAC,EAAA,IACA,IAAA/D,EAAA,IAAAkE,MAAA,uBAAAJ,EAAA,KAEA,MADA9D,EAAAmE,KAAA,mBACAnE,EAEA,OAAA+D,EAEAF,EAAAO,KAAA,WACA,OAAA1G,OAAA0G,KAAAtD,IAEA+C,EAAAQ,QAAAL,EACAM,EAAAC,QAAAV,EACAA,EAAAE,GAAA,uBC9BAO,EAAAC,QAAiBN,EAAAO,EAAuB,kICAxCF,EAAAC,QAAiBN,EAAAO,EAAuB,yDCAxCF,EAAAC,QAAiBN,EAAAO,EAAuB,yDCAxCF,EAAAC,QAAiBN,EAAAO,EAAuB,yDCAxCF,EAAAC,QAAiBN,EAAAO,EAAuB,yDCAxCF,EAAAC,QAAiBN,EAAAO,EAAuB,yDCAxCF,EAAAC,QAAiBN,EAAAO,EAAuB,yDCAxCF,EAAAC,QAAiBN,EAAAO,EAAuB","file":"static/js/main.5b21e4fc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport * as Colyseus from \"colyseus.js\";\nimport '../App.css';\n\nexport default class Leaderboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeCode = this.onChangeCode.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      room: '',\n      page: 'init',\n      users: [],\n      step: 0,\n      score: [],\n      question: '',\n      answers: []\n    }\n\n    var endpoint = window.location.protocol.replace(\"http\", \"ws\") + \"//\" + window.location.hostname;\n\n    // development server\n    if (window.location.port && window.location.port !== \"80\") { endpoint += \":2567\" }\n\n    // endpoint = \"ws://192.168.0.39:2567\";\n    this.colyseus = new Colyseus.Client(endpoint);\n  }\n\n  msgListener(message) {\n    if (message.key == 'join') {\n      console.log(\"response join\", message.data);\n      this.setState({users:message.data});\n    } else if (message.key == 'test') {\n      console.log(\"response - test\");\n      this.setState({page:'game', step:message.data.step, question: message.data.q, answers: message.data.a});\n    } else if (message.key == 'result') {\n      console.log(\"success\", message.data);\n      this.setState({page:'result', users:message.data});\n    }\n  }\n\n  joinListener() {\n    console.log('joined');\n    this.room.onMessage.add(this.msgListener.bind(this));\n    this.setState({\n      page: 'wait'\n    })\n  }\n\n  onChangeCode(e) {\n    this.setState({\n      room: e.target.value,\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();    \n    console.log('joining room', this.state.room);\n    this.room = this.colyseus.join(this.state.room);\n    this.room.onJoin.add(this.joinListener.bind(this));\n  }\n \n  render() {\n    if (this.state.page == 'wait') return (\n      <div>\n        <h3 align=\"center\" style={{color:'#ccc', marginTop: 50, marginBottom: 30}}>Code({this.state.room}) - Joined Users</h3>\n        {this.state.users.map((user, i)=>{\n          return (\n          <div className=\"listcontainer\" key={i} style={{background:'rgba(255, 255, 255, 0.1)', borderRadius:10, maxWidth:300}}>\n            <img className='listimg' src={require('../assets/'+user.avatar)}/><span className='listname'>{user.fname}</span>\n          </div>\n          )\n        })}\n      </div>\n    )\n    if (this.state.page == 'game') return (\n      <div>\n        <h3 align=\"center\" style={{color:'#ccc', marginTop: 50, marginBottom: 30}}>{this.state.step}/5 Questions</h3>\n        <h4 align=\"center\" style={{color:'#ccc', marginTop: 10, marginBottom: 30}}>{this.state.question}</h4>\n        {this.state.answers.map((answer, i)=>{\n          return (\n          <div className=\"answercontainer\" key={i} style={{background:'rgba(255, 255, 255, 0.05)', maxWidth:400}}>\n            <span className='answername'>{answer}</span>\n          </div>\n          )\n        })}\n      </div>\n    )\n    if (this.state.page == 'result') return (\n      <div>\n        <h3 align=\"center\" style={{color:'#ccc', marginTop: 50, marginBottom: 30}}>Game Result</h3>\n        {this.state.users.map((user, i)=>{\n          return (\n          <div className=\"listcontainer\" key={i} style={{background:'rgba(255, 255, 255, 0.1)', borderRadius:10, maxWidth:300}}>\n            <img className='listimg' src={require('../assets/'+user.avatar)}/><span className='listname'>{user.fname}&nbsp;&nbsp;&nbsp;&nbsp;<strong>{user.tscore}</strong></span>\n          </div>\n          )\n        })}\n      </div>\n    )\n    return (\n        <form onSubmit={this.onSubmit} className=\"text-center\" style={{ marginTop: 10 }}>\n          <h3 align=\"center\" style={{color:'#ccc', marginTop: 50, marginBottom: 30}}>Please input game code</h3>\n          <div className=\"form-group\">\n            <input type=\"text\" style={{width:200, padding:10, borderRadius:6, background:'rgba(255, 255, 255, 0.2)', border:0}} value={this.state.room} onChange={this.onChangeCode}/>\n          </div>\n          <div className=\"form-group\">\n            <input type=\"submit\" style={{width:200, padding:10, borderRadius:25, border:'1px solid #ccc', background:'rgba(0, 0, 0, 0)', color:'#ccc'}} value=\"Start\"/>\n          </div>\n        </form>\n    )\n  }\n}","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport Leaderboard from './components/leaderboard.component';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <div className=\"text-center\">\n            <img align=\"center\" className=\"center\" src={require('./assets/logo.png')} style={{height:150, marginTop: 30}}/>\n          </div>\n          <Switch>\n              <Route path='/leaderboard' component={ Leaderboard } />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n  <App />\n  </BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","var map = {\n\t\"./logo.png\": 38,\n\t\"./userPic0.png\": 91,\n\t\"./userPic1.png\": 92,\n\t\"./userPic2.png\": 93,\n\t\"./userPic3.png\": 94,\n\t\"./userPic4.png\": 95,\n\t\"./userPic5.png\": 96,\n\t\"./userPic6.png\": 97\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 37;","module.exports = __webpack_public_path__ + \"static/media/logo.a2975d85.png\";","module.exports = __webpack_public_path__ + \"static/media/userPic0.6839614d.png\";","module.exports = __webpack_public_path__ + \"static/media/userPic1.c0554664.png\";","module.exports = __webpack_public_path__ + \"static/media/userPic2.647e219f.png\";","module.exports = __webpack_public_path__ + \"static/media/userPic3.c53dc180.png\";","module.exports = __webpack_public_path__ + \"static/media/userPic4.11705daa.png\";","module.exports = __webpack_public_path__ + \"static/media/userPic5.2c4686cb.png\";","module.exports = __webpack_public_path__ + \"static/media/userPic6.8ec3ae35.png\";"],"sourceRoot":""}